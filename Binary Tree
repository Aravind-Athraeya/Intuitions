Binary Tree - 
Print BT within Range -  Do a inOrder traversal, Rucrse - Left, Root and Right. Return if null
Check if two BT are equal - Pass two BT root notes to a func. check for current root- LHS == RHS, REcurse left and right. Func should return bool
Implment Queue- FIFO - Doesnt have to be a BBT.DEclare root. Start adding to the right for push. For Pop, go from the root or vice versa
Root to leaf available - function should return a bool. recurse.
LCA  - 
Minimum SUM - 
Inorder,preorder, post order & corresponding Sucessors- 
f given node is root then postorder successor is NULL, since root is the last node print in a postorder traversal
If given node is right child of parent or right child of parent is NULL, then parent is postorder successor.
If given node is left child of parent and right child of parent is not NULL, then postorder successor is the leftmost node of parentâ€™s right subtree

Print root to all leaf - Send an array in the input, each step add the current path to the array and recuse. Finally print the array if there are no further children
Height of the binary tree is the number of edges from root to leaf
